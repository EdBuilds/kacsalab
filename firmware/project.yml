---

# Notes:
# Sample project C code is not presently written to produce a release artifact.
# As such, release build options are disabled.
# This sample, therefore, only demonstrates running a collection of unit tests.

:project:
  :use_exceptions: FALSE
  :use_test_preprocessor: TRUE
  :use_auxiliary_dependencies: TRUE
  :build_root: build
#  :release_build: TRUE
  :test_file_prefix: test_

#:release_build:
#  :output: MyApp.out
#  :use_assembly: FALSE

:environment:

:extension:
  :executable: .out

:paths:
  :test:
    - +:central_control_system/Core/test/**
  :source:
    - central_control_system/Core/Src/**
    - central_control_system/Core/Inc/**
  :include:
    - central_control_system/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2
    - central_control_system/Middlewares/Third_Party/FreeRTOS/Source/include
    - central_control_system/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F
    - central_control_system/Middlewares/Third_Party/FreeRTOS-Plus/Source/Utilities/logging/**
    - central_control_system/board_support/**
    - libcommon/**

:defines:
  # in order to add common defines:
  #  1) remove the trailing [] from the :common: section
  #  2) add entries to the :common: section (e.g. :test: has TEST defined)
  :commmon: &common_defines
    - DEBUG
    - __CODE_RED
    - CORE_M4
    - __USE_LPCOPEN
    - NO_BOARD_LIB
    - __USE_CMSIS_DSPLIB=CMSIS_DSPLIB_CM4
    - __LPC407X_8X__
    - __REDLIB__
    - UNIT_TEST
    - CMOCK_MEM_SIZE=10000000
    # I've had to change TEST to CEEDLING_TEST to get around that lpc_chip uses a variable called TEST
  :test:
    - *common_defines
    - CEEDLING_TEST
  :test_preprocess:
    - *common_defines
    - CEEDLING_TEST

:cmock:
  :mock_prefix: mock_
  :when_no_prototypes: :warn
  :enforce_strict_ordering: TRUE
  :plugins:
    - :ignore
    - :ignore_arg
    - :callback
    - :return_thru_ptr
  :treat_as:
    uint8:    HEX8
    uint16:   HEX16
    uint32:   UINT32
    int8:     INT8
    bool:     UINT8
  :includes:


:flags:
  :test:
    :compile:
      :*:
        - -fprofile-arcs -ftest-coverage
        # Supressing pointer to int casting warning to disable warnings from lcd_17xx_40xx.h.
        # Take extra care to avoid these casts during development!
        - -Wno-pointer-to-int-cast
    :link:
      :*:
        - <%= if (/darwin/ =~ RUBY_PLATFORM) != nil then "-L#{Dir.glob("/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/*/lib/darwin/")[0]} -lclang_rt.profile_osx" else '-lgcov --coverage' end %>

#:tools:
# Ceedling defaults to using gcc for compiling, linking, etc.
# As [:tools] is blank, gcc will be used (so long as it's in your system path)
# See documentation to configure a given toolchain for use

:plugins:
  :load_paths:
    - "#{Ceedling.load_path}"
  :enabled:
    #- stdout_pretty_tests_report
    - stdout_gtestlike_tests_report
    - module_generator
    - junit_tests_report
...
